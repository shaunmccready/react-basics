{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","onChangeFilter","target","value","selected","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","getMonth","Expenses","useState","filterYear","setFilterYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","showAddExpense","setShowAddExpense","showAddExpenseHandler","prevState","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","NewExpence","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a23f3a4e.chunk.js","sourcesContent":["import './Card.css'\n\n// This function is used to extract specific CSS properties and apply it to the children of Card\nfunction Card(props) {\n    // This helps to carry over the class names that were used as well as the card class thats needed.\n    const classes = 'card ' + props.className\n\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card\n","import React from 'react'\n\nimport './ExpensesFilter.css'\n\nconst ExpensesFilter = (props) => {\n    const dropdownChangeHandler = (event) => {\n        props.onChangeFilter(event.target.value)\n    }\n\n    return (\n        <div className='expenses-filter'>\n            <div className='expenses-filter__control'>\n                <label>Filter by year</label>\n                <select onChange={dropdownChangeHandler} value={props.selected}>\n                    <option value='2023'>2023</option>\n                    <option value='2022'>2022</option>\n                    <option value='2021'>2021</option>\n                    <option value='2020'>2020</option>\n                </select>\n            </div>\n        </div>\n    )\n}\n\nexport default ExpensesFilter\n","import './ExpenseDate.css'\n\nfunction ExpenseDate(props) {\n    const month = props.date.toLocaleString('en-US', { month: 'long' })\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' })\n    const year = props.date.getFullYear()\n\n    return (\n        <div className='expense-date'>\n            <div className='expense-date__month'>{month}</div>\n            <div className='expense-date__year'>{year}</div>\n            <div className='expense-date__day'>{day}</div>\n        </div>\n    )\n}\n\nexport default ExpenseDate\n","import './ExpenseItem.css'\nimport ExpenseDate from './ExpenseDate'\nimport Card from '../UI/Card'\n\nfunction ExpenseItem(props) {\n    return (\n        <li>\n            <Card className='expense-item'>\n                <ExpenseDate date={props.date} />\n                <div className='expense-item__description'>\n                    <h2>{props.title}</h2>\n                    <div className='expense-item__price'>${props.amount}</div>\n                </div>\n            </Card>\n        </li>\n    )\n}\n\nexport default ExpenseItem\n","import ExpenseItem from './ExpenseItem'\nimport './ExpensesList.css'\n\nconst ExpensesList = (props) => {\n    if (props.expenses.length === 0) {\n        return <h2 className='expenses-list__fallback'>Found no expenses.</h2>\n    }\n\n    return (\n        <ul className='expenses-list'>\n            {props.expenses.map((expense) => (\n                <ExpenseItem\n                    key={expense.id}\n                    title={expense.title}\n                    amount={expense.amount}\n                    date={expense.date}\n                ></ExpenseItem>\n            ))}\n        </ul>\n    )\n}\n\nexport default ExpensesList\n","import './ChartBar.css'\n\nconst ChartBar = (props) => {\n    let barFillHeight = '0%'\n\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\n    }\n\n    return (\n        <div className='chart-bar'>\n            <div className='chart-bar__inner'>\n                <div\n                    className='chart-bar__fill'\n                    style={{ height: barFillHeight }}\n                ></div>\n            </div>\n            <div className='chart-bar__label'>{props.label}</div>\n        </div>\n    )\n}\n\nexport default ChartBar\n","import ChartBar from './ChartBar'\nimport './Chart.css'\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value)\n    const totalMaximum = Math.max(...dataPointValues) // the spread operator is pulling out all values within the array\n\n    return (\n        <div className='chart'>\n            {props.dataPoints.map((dataPoint) => (\n                <ChartBar\n                    key={dataPoint.label}\n                    value={dataPoint.value}\n                    maxValue={totalMaximum}\n                    label={dataPoint.label}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default Chart\n","import Chart from '../Chart/Chart'\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        { label: 'Jan', value: 0 },\n        { label: 'Feb', value: 0 },\n        { label: 'Mar', value: 0 },\n        { label: 'Apr', value: 0 },\n        { label: 'May', value: 0 },\n        { label: 'Jun', value: 0 },\n        { label: 'Jul', value: 0 },\n        { label: 'Aug', value: 0 },\n        { label: 'Sep', value: 0 },\n        { label: 'Oct', value: 0 },\n        { label: 'Nov', value: 0 },\n        { label: 'Dec', value: 0 }\n    ]\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth()\n        chartDataPoints[expenseMonth].value += expense.amount\n    }\n\n    return <Chart dataPoints={chartDataPoints} />\n}\n\nexport default ExpensesChart\n","import './Expenses.css'\nimport Card from '../UI/Card'\nimport ExpensesFilter from './ExpensesFilter'\nimport { useState } from 'react'\nimport ExpensesList from './ExpensesList'\nimport ExpensesChart from './ExpensesChart'\n\nfunction Expenses(props) {\n    const [filterYear, setFilterYear] = useState('2020')\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilterYear(selectedYear)\n    }\n\n    const filteredExpenses = props.expenses.filter(\n        (expense) => filterYear === expense.date.getFullYear().toString()\n    )\n\n    return (\n        <Card className='expenses'>\n            <ExpensesFilter\n                onChangeFilter={filterChangeHandler}\n                selected={filterYear}\n            />\n            <ExpensesChart expenses={filteredExpenses} />\n            <ExpensesList expenses={filteredExpenses} />\n        </Card>\n    )\n}\n\nexport default Expenses\n","import { useState } from 'react'\nimport './ExpenseForm.css'\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState('')\n    const [enteredAmount, setEnteredAmount] = useState('')\n    const [enteredDate, setEnteredDate] = useState('')\n    const [showAddExpense, setShowAddExpense] = useState(false)\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value)\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value)\n    }\n\n    const dataChangedHandler = (event) => {\n        setEnteredDate(event.target.value)\n    }\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault()\n\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate)\n        }\n\n        props.onSaveExpenseData(expenseData)\n        setEnteredTitle('')\n        setEnteredAmount('')\n        setEnteredDate('')\n\n        showAddExpenseHandler()\n    }\n\n    const showAddExpenseHandler = () => {\n        setShowAddExpense((prevState) => !prevState)\n    }\n\n    if (!showAddExpense) {\n        return <button onClick={showAddExpenseHandler}>Add New Expense</button>\n    }\n\n    return (\n        <form onSubmit={onSubmitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input\n                        type='text'\n                        value={enteredTitle}\n                        onChange={titleChangeHandler}\n                    />\n                </div>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    <input\n                        type='number'\n                        min='0.01'\n                        step='0.01'\n                        value={enteredAmount}\n                        onChange={amountChangeHandler}\n                    />\n                </div>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input\n                        type='date'\n                        min='2019-01-01'\n                        max='2023-12-31'\n                        value={enteredDate}\n                        onChange={dataChangedHandler}\n                    />\n                </div>\n            </div>\n            <div className='new-expense__actions'>\n                <button onClick={showAddExpenseHandler}>Cancel</button>\n                <button type='submit'>Add Expense</button>\n            </div>\n        </form>\n    )\n}\n\nexport default ExpenseForm\n","import './NewExpense.css'\nimport ExpenseForm from './ExpenseForm'\n\nconst NewExpence = (props) => {\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        }\n\n        props.onAddExpense(expenseData)\n    }\n\n    return (\n        <div className='new-expense'>\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n        </div>\n    )\n}\n\nexport default NewExpence\n","import Expenses from './components/Expenses/Expenses'\nimport NewExpence from './components/NewExpense/NewExpense'\nimport { useState } from 'react'\n\nconst DUMMY_EXPENSES = [\n    {\n        id: 'e1',\n        title: 'Toilet Paper',\n        amount: 94.12,\n        date: new Date(2020, 7, 14)\n    },\n    {\n        id: 'e2',\n        title: 'New TV',\n        amount: 799.49,\n        date: new Date(2021, 2, 12)\n    },\n    {\n        id: 'e3',\n        title: 'Car Insurance',\n        amount: 294.67,\n        date: new Date(2021, 2, 28)\n    },\n    {\n        id: 'e4',\n        title: 'New Desk (Wooden)',\n        amount: 450,\n        date: new Date(2021, 5, 12)\n    }\n]\n\nfunction App() {\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n    const addExpenseHandler = (expense) => {\n        setExpenses((prevExpenses) => {\n            return [expense, ...prevExpenses]\n        })\n    }\n\n    return (\n        <div>\n            <NewExpence onAddExpense={addExpenseHandler} />\n            <Expenses expenses={expenses} />\n        </div>\n    )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}